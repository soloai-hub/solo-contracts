{"abi":[{"type":"function","name":"claimByTokenBatchAsSelf","inputs":[{"name":"tokenList","type":"address[]","internalType":"address[]"},{"name":"targetIpId","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRevenueOnBehalf","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimRevenueOnBehalfByTokenBatch","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"tokenList","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimableRevenue","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimerRevenueDebt","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"supply","type":"uint32","internalType":"uint32"},{"name":"ipIdAddress","type":"address","internalType":"address"},{"name":"rtReceiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ipId","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"updateVaultBalance","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vaultAccBalances","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"RevenueDebtUpdated","inputs":[{"name":"claimer","type":"address","indexed":false,"internalType":"address"},{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"revenueDebt","type":"int256","indexed":false,"internalType":"int256"}],"anonymous":false},{"type":"event","name":"RevenueTokenAddedToVault","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RevenueTokenClaimed","inputs":[{"name":"claimer","type":"address","indexed":false,"internalType":"address"},{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimByTokenBatchAsSelf(address[],address)":"213bcc7e","claimRevenueOnBehalf(address,address)":"a598bacf","claimRevenueOnBehalfByTokenBatch(address,address[])":"3440512e","claimableRevenue(address,address)":"222ca481","claimerRevenueDebt(address,address)":"cca0d7c1","initialize(string,string,uint32,address,address)":"621f6210","ipId()":"1937dfc8","tokens()":"9d63848a","updateVaultBalance(address,uint256)":"b8205bf2","vaultAccBalances(address)":"d7f2bc14"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"revenueDebt\",\"type\":\"int256\"}],\"name\":\"RevenueDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RevenueTokenAddedToVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RevenueTokenClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenList\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"targetIpId\",\"type\":\"address\"}],\"name\":\"claimByTokenBatchAsSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimRevenueOnBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokenList\",\"type\":\"address[]\"}],\"name\":\"claimRevenueOnBehalfByTokenBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimableRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimerRevenueDebt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"supply\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"ipIdAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rtReceiver\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateVaultBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"vaultAccBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RevenueDebtUpdated(address,address,int256)\":{\"params\":{\"claimer\":\"The address of the claimer\",\"revenueDebt\":\"The amount of revenue token claimed\",\"token\":\"The revenue token claimed\"}},\"RevenueTokenAddedToVault(address,uint256)\":{\"params\":{\"amount\":\"The amount of revenue token added\",\"token\":\"The address of the revenue token\"}},\"RevenueTokenClaimed(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of revenue token claimed\",\"claimer\":\"The address of the claimer\",\"token\":\"The revenue token claimed\"}}},\"kind\":\"dev\",\"methods\":{\"claimByTokenBatchAsSelf(address[],address)\":{\"params\":{\"targetIpId\":\"The target ip id to claim revenue tokens from\",\"tokenList\":\"The list of revenue tokens to claim\"}},\"claimRevenueOnBehalf(address,address)\":{\"params\":{\"claimer\":\"The address of the claimer\",\"token\":\"The revenue tokens to claim\"},\"returns\":{\"_0\":\"The amount of revenue tokens claimed\"}},\"claimRevenueOnBehalfByTokenBatch(address,address[])\":{\"params\":{\"claimer\":\"The address of the claimer\",\"tokenList\":\"The list of revenue tokens to claim\"},\"returns\":{\"_0\":\"The amount of revenue tokens claimed of each token\"}},\"claimableRevenue(address,address)\":{\"params\":{\"claimer\":\"The address of the token holder\",\"token\":\"The revenue token to claim\"},\"returns\":{\"_0\":\"The amount of revenue token claimable\"}},\"claimerRevenueDebt(address,address)\":{\"params\":{\"claimer\":\"The address of the claimer\",\"token\":\"The revenue token to check\"},\"returns\":{\"_0\":\"The revenue debt of the claimer for the token\"}},\"initialize(string,string,uint32,address,address)\":{\"params\":{\"ipIdAddress\":\"The ip id the royalty vault belongs to\",\"name\":\"The name of the royalty token\",\"rtReceiver\":\"The address of the royalty token receiver\",\"supply\":\"The total supply of the royalty token\",\"symbol\":\"The symbol of the royalty token\"}},\"updateVaultBalance(address,uint256)\":{\"details\":\"Only callable by the royalty module or whitelisted royalty policy\",\"params\":{\"amount\":\"The amount of revenue token to add\",\"token\":\"The address of the revenue token\"}},\"vaultAccBalances(address)\":{\"params\":{\"token\":\"The revenue token to check\"},\"returns\":{\"_0\":\"The accumulated balance of revenue tokens in the vault\"}}},\"title\":\"IpRoyaltyVault interface\",\"version\":1},\"userdoc\":{\"events\":{\"RevenueDebtUpdated(address,address,int256)\":{\"notice\":\"Event emitted when a revenue debt of a claimer is updated\"},\"RevenueTokenAddedToVault(address,uint256)\":{\"notice\":\"Event emitted when a revenue token is added to a vault\"},\"RevenueTokenClaimed(address,address,uint256)\":{\"notice\":\"Event emitted when a revenue token is claimed\"}},\"kind\":\"user\",\"methods\":{\"claimByTokenBatchAsSelf(address[],address)\":{\"notice\":\"Allows to claim revenue tokens on behalf of the ip royalty vault\"},\"claimRevenueOnBehalf(address,address)\":{\"notice\":\"Allows token holders to claim revenue token\"},\"claimRevenueOnBehalfByTokenBatch(address,address[])\":{\"notice\":\"Allows token holders to claim a batch of revenue tokens\"},\"claimableRevenue(address,address)\":{\"notice\":\"Get total amount of revenue token claimable by a token holder\"},\"claimerRevenueDebt(address,address)\":{\"notice\":\"The revenue debt of the claimer, used to calculate the claimable revenue positive value means claimed need to deducted, negative value means claimable from vault\"},\"initialize(string,string,uint32,address,address)\":{\"notice\":\"Initializer for this implementation contract\"},\"ipId()\":{\"notice\":\"The ip id to whom this royalty vault belongs to\"},\"tokens()\":{\"notice\":\"The list of revenue tokens in the vault\"},\"updateVaultBalance(address,uint256)\":{\"notice\":\"Updates the vault balance with the new amount of revenue token\"},\"vaultAccBalances(address)\":{\"notice\":\"The accumulated balance of revenue tokens in the vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IIpRoyaltyVault.sol\":\"IIpRoyaltyVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@vizing/=node_modules/@vizing/\",\":create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc6551/=node_modules/erc6551/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-core-v1/=lib/protocol-core-v1/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IIpRoyaltyVault.sol\":{\"keccak256\":\"0xe7167ac52bc19ed804aca0a80339b89f2a7c9529d5ebb1979e53d09ac2a191ab\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ecfc7ca5520ab912ef3c52749bade49a0afcdaa9bda72578468130300c608adf\",\"dweb:/ipfs/QmRAm8eK7JPqoZneCJuREsZDc59mapCdBPYywBgwncrYti\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":false},{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"int256","name":"revenueDebt","type":"int256","indexed":false}],"type":"event","name":"RevenueDebtUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RevenueTokenAddedToVault","anonymous":false},{"inputs":[{"internalType":"address","name":"claimer","type":"address","indexed":false},{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RevenueTokenClaimed","anonymous":false},{"inputs":[{"internalType":"address[]","name":"tokenList","type":"address[]"},{"internalType":"address","name":"targetIpId","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimByTokenBatchAsSelf"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimRevenueOnBehalf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"address[]","name":"tokenList","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimRevenueOnBehalfByTokenBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"claimableRevenue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"claimerRevenueDebt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint32","name":"supply","type":"uint32"},{"internalType":"address","name":"ipIdAddress","type":"address"},{"internalType":"address","name":"rtReceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"ipId","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateVaultBalance"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"vaultAccBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"claimByTokenBatchAsSelf(address[],address)":{"params":{"targetIpId":"The target ip id to claim revenue tokens from","tokenList":"The list of revenue tokens to claim"}},"claimRevenueOnBehalf(address,address)":{"params":{"claimer":"The address of the claimer","token":"The revenue tokens to claim"},"returns":{"_0":"The amount of revenue tokens claimed"}},"claimRevenueOnBehalfByTokenBatch(address,address[])":{"params":{"claimer":"The address of the claimer","tokenList":"The list of revenue tokens to claim"},"returns":{"_0":"The amount of revenue tokens claimed of each token"}},"claimableRevenue(address,address)":{"params":{"claimer":"The address of the token holder","token":"The revenue token to claim"},"returns":{"_0":"The amount of revenue token claimable"}},"claimerRevenueDebt(address,address)":{"params":{"claimer":"The address of the claimer","token":"The revenue token to check"},"returns":{"_0":"The revenue debt of the claimer for the token"}},"initialize(string,string,uint32,address,address)":{"params":{"ipIdAddress":"The ip id the royalty vault belongs to","name":"The name of the royalty token","rtReceiver":"The address of the royalty token receiver","supply":"The total supply of the royalty token","symbol":"The symbol of the royalty token"}},"updateVaultBalance(address,uint256)":{"details":"Only callable by the royalty module or whitelisted royalty policy","params":{"amount":"The amount of revenue token to add","token":"The address of the revenue token"}},"vaultAccBalances(address)":{"params":{"token":"The revenue token to check"},"returns":{"_0":"The accumulated balance of revenue tokens in the vault"}}},"version":1},"userdoc":{"kind":"user","methods":{"claimByTokenBatchAsSelf(address[],address)":{"notice":"Allows to claim revenue tokens on behalf of the ip royalty vault"},"claimRevenueOnBehalf(address,address)":{"notice":"Allows token holders to claim revenue token"},"claimRevenueOnBehalfByTokenBatch(address,address[])":{"notice":"Allows token holders to claim a batch of revenue tokens"},"claimableRevenue(address,address)":{"notice":"Get total amount of revenue token claimable by a token holder"},"claimerRevenueDebt(address,address)":{"notice":"The revenue debt of the claimer, used to calculate the claimable revenue positive value means claimed need to deducted, negative value means claimable from vault"},"initialize(string,string,uint32,address,address)":{"notice":"Initializer for this implementation contract"},"ipId()":{"notice":"The ip id to whom this royalty vault belongs to"},"tokens()":{"notice":"The list of revenue tokens in the vault"},"updateVaultBalance(address,uint256)":{"notice":"Updates the vault balance with the new amount of revenue token"},"vaultAccBalances(address)":{"notice":"The accumulated balance of revenue tokens in the vault"}},"version":1}},"settings":{"remappings":["@create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/","@openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@vizing/=node_modules/@vizing/","create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/","ds-test/=node_modules/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc6551/=node_modules/erc6551/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=node_modules/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-core-v1/=lib/protocol-core-v1/","solady/=node_modules/solady/","solidity-stringutils/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IIpRoyaltyVault.sol":"IIpRoyaltyVault"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/royalty/policies/IIpRoyaltyVault.sol":{"keccak256":"0xe7167ac52bc19ed804aca0a80339b89f2a7c9529d5ebb1979e53d09ac2a191ab","urls":["bzz-raw://ecfc7ca5520ab912ef3c52749bade49a0afcdaa9bda72578468130300c608adf","dweb:/ipfs/QmRAm8eK7JPqoZneCJuREsZDc59mapCdBPYywBgwncrYti"],"license":"BUSL-1.1"}},"version":1},"id":55}