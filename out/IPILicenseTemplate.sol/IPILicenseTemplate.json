{"abi":[{"type":"function","name":"allowDerivativeRegistration","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"canAttachToGroupIp","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"canOverrideRoyaltyPercent","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"newRoyaltyPercent","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"exists","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getEarlierExpireTime","inputs":[{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"},{"name":"start","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getExpireTime","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"start","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLicenseTerms","inputs":[{"name":"selectedLicenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"terms","type":"tuple","internalType":"struct PILTerms","components":[{"name":"transferable","type":"bool","internalType":"bool"},{"name":"royaltyPolicy","type":"address","internalType":"address"},{"name":"defaultMintingFee","type":"uint256","internalType":"uint256"},{"name":"expiration","type":"uint256","internalType":"uint256"},{"name":"commercialUse","type":"bool","internalType":"bool"},{"name":"commercialAttribution","type":"bool","internalType":"bool"},{"name":"commercializerChecker","type":"address","internalType":"address"},{"name":"commercializerCheckerData","type":"bytes","internalType":"bytes"},{"name":"commercialRevShare","type":"uint32","internalType":"uint32"},{"name":"commercialRevCeiling","type":"uint256","internalType":"uint256"},{"name":"derivativesAllowed","type":"bool","internalType":"bool"},{"name":"derivativesAttribution","type":"bool","internalType":"bool"},{"name":"derivativesApproval","type":"bool","internalType":"bool"},{"name":"derivativesReciprocal","type":"bool","internalType":"bool"},{"name":"derivativeRevCeiling","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"uri","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getLicenseTermsId","inputs":[{"name":"terms","type":"tuple","internalType":"struct PILTerms","components":[{"name":"transferable","type":"bool","internalType":"bool"},{"name":"royaltyPolicy","type":"address","internalType":"address"},{"name":"defaultMintingFee","type":"uint256","internalType":"uint256"},{"name":"expiration","type":"uint256","internalType":"uint256"},{"name":"commercialUse","type":"bool","internalType":"bool"},{"name":"commercialAttribution","type":"bool","internalType":"bool"},{"name":"commercializerChecker","type":"address","internalType":"address"},{"name":"commercializerCheckerData","type":"bytes","internalType":"bytes"},{"name":"commercialRevShare","type":"uint32","internalType":"uint32"},{"name":"commercialRevCeiling","type":"uint256","internalType":"uint256"},{"name":"derivativesAllowed","type":"bool","internalType":"bool"},{"name":"derivativesAttribution","type":"bool","internalType":"bool"},{"name":"derivativesApproval","type":"bool","internalType":"bool"},{"name":"derivativesReciprocal","type":"bool","internalType":"bool"},{"name":"derivativeRevCeiling","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"uri","type":"string","internalType":"string"}]}],"outputs":[{"name":"selectedLicenseTermsId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLicenseTermsURI","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMetadataURI","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getRoyaltyPolicy","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"royaltyPolicy","type":"address","internalType":"address"},{"name":"royaltyPercent","type":"uint32","internalType":"uint32"},{"name":"mintingLicenseFee","type":"uint256","internalType":"uint256"},{"name":"currencyToken","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isLicenseTransferable","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"registerLicenseTerms","inputs":[{"name":"terms","type":"tuple","internalType":"struct PILTerms","components":[{"name":"transferable","type":"bool","internalType":"bool"},{"name":"royaltyPolicy","type":"address","internalType":"address"},{"name":"defaultMintingFee","type":"uint256","internalType":"uint256"},{"name":"expiration","type":"uint256","internalType":"uint256"},{"name":"commercialUse","type":"bool","internalType":"bool"},{"name":"commercialAttribution","type":"bool","internalType":"bool"},{"name":"commercializerChecker","type":"address","internalType":"address"},{"name":"commercializerCheckerData","type":"bytes","internalType":"bytes"},{"name":"commercialRevShare","type":"uint32","internalType":"uint32"},{"name":"commercialRevCeiling","type":"uint256","internalType":"uint256"},{"name":"derivativesAllowed","type":"bool","internalType":"bool"},{"name":"derivativesAttribution","type":"bool","internalType":"bool"},{"name":"derivativesApproval","type":"bool","internalType":"bool"},{"name":"derivativesReciprocal","type":"bool","internalType":"bool"},{"name":"derivativeRevCeiling","type":"uint256","internalType":"uint256"},{"name":"currency","type":"address","internalType":"address"},{"name":"uri","type":"string","internalType":"string"}]}],"outputs":[{"name":"selectedLicenseTermsId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"toJson","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalRegisteredLicenseTerms","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"verifyCompatibleLicenses","inputs":[{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"verifyMintLicenseToken","inputs":[{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"licensee","type":"address","internalType":"address"},{"name":"licensorIpId","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyRegisterDerivative","inputs":[{"name":"childIpId","type":"address","internalType":"address"},{"name":"parentIpId","type":"address","internalType":"address"},{"name":"licenseTermsId","type":"uint256","internalType":"uint256"},{"name":"licensee","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"verifyRegisterDerivativeForAllParents","inputs":[{"name":"childIpId","type":"address","internalType":"address"},{"name":"parentIpId","type":"address[]","internalType":"address[]"},{"name":"licenseTermsIds","type":"uint256[]","internalType":"uint256[]"},{"name":"caller","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"LicenseTermsRegistered","inputs":[{"name":"licenseTermsId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"licenseTemplate","type":"address","indexed":true,"internalType":"address"},{"name":"licenseTerms","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowDerivativeRegistration(uint256)":"41b89edf","canAttachToGroupIp(uint256)":"5b126935","canOverrideRoyaltyPercent(uint256,uint32)":"5ef1e21e","exists(uint256)":"4f558e79","getEarlierExpireTime(uint256[],uint256)":"f6a76f7c","getExpireTime(uint256,uint256)":"8dc5398b","getLicenseTerms(uint256)":"d1908a9c","getLicenseTermsId((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":"602f6b9b","getLicenseTermsURI(uint256)":"d944a9bf","getMetadataURI()":"86a92af7","getRoyaltyPolicy(uint256)":"60c2b0f8","isLicenseTransferable(uint256)":"c32b6fcc","name()":"06fdde03","registerLicenseTerms((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":"6e1b8d90","supportsInterface(bytes4)":"01ffc9a7","toJson(uint256)":"ef647765","totalRegisteredLicenseTerms()":"225b88f1","verifyCompatibleLicenses(uint256[])":"9577ac09","verifyMintLicenseToken(uint256,address,address,uint256)":"34494a5c","verifyRegisterDerivative(address,address,uint256,address)":"bd24bb52","verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":"d7031a8d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"licenseTemplate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"licenseTerms\",\"type\":\"bytes\"}],\"name\":\"LicenseTermsRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"allowDerivativeRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"canAttachToGroupIp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"newRoyaltyPercent\",\"type\":\"uint32\"}],\"name\":\"canOverrideRoyaltyPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"getEarlierExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"getExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedLicenseTermsId\",\"type\":\"uint256\"}],\"name\":\"getLicenseTerms\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"royaltyPolicy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"defaultMintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"commercialUse\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"commercialAttribution\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"commercializerChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"commercializerCheckerData\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"commercialRevShare\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"commercialRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"derivativesAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesAttribution\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesReciprocal\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"derivativeRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct PILTerms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"royaltyPolicy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"defaultMintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"commercialUse\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"commercialAttribution\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"commercializerChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"commercializerCheckerData\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"commercialRevShare\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"commercialRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"derivativesAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesAttribution\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesReciprocal\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"derivativeRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct PILTerms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"name\":\"getLicenseTermsId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedLicenseTermsId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"getLicenseTermsURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyPolicy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"royaltyPolicy\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"royaltyPercent\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"mintingLicenseFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currencyToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"isLicenseTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"royaltyPolicy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"defaultMintingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"commercialUse\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"commercialAttribution\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"commercializerChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"commercializerCheckerData\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"commercialRevShare\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"commercialRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"derivativesAllowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesAttribution\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"derivativesReciprocal\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"derivativeRevCeiling\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"internalType\":\"struct PILTerms\",\"name\":\"terms\",\"type\":\"tuple\"}],\"name\":\"registerLicenseTerms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"selectedLicenseTermsId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"}],\"name\":\"toJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRegisteredLicenseTerms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"}],\"name\":\"verifyCompatibleLicenses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"licensorIpId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"verifyMintLicenseToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childIpId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"parentIpId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"licenseTermsId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"licensee\",\"type\":\"address\"}],\"name\":\"verifyRegisterDerivative\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"childIpId\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"parentIpId\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"licenseTermsIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"verifyRegisterDerivativeForAllParents\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"LicenseTermsRegistered(uint256,address,bytes)\":{\"params\":{\"licenseTemplate\":\"The address of the license template.\",\"licenseTerms\":\"The data of the license.\",\"licenseTermsId\":\"The ID of the license terms.\"}}},\"kind\":\"dev\",\"methods\":{\"allowDerivativeRegistration(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the derivative registration is allowed, false otherwise.\"}},\"canAttachToGroupIp(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the license terms support associate with group IP assets, false otherwise.\"}},\"canOverrideRoyaltyPercent(uint256,uint32)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\",\"newRoyaltyPercent\":\"The new royalty percentage.\"},\"returns\":{\"_0\":\"True if the royalty percentage can be overridden, false otherwise.\"}},\"exists(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the license terms exists, false otherwise.\"}},\"getEarlierExpireTime(uint256[],uint256)\":{\"params\":{\"licenseTermsIds\":\"The IDs of the license terms.\",\"start\":\"The start time to calculate the expiration time.\"},\"returns\":{\"_0\":\"The earliest expiration time.\"}},\"getExpireTime(uint256,uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\",\"start\":\"The start time.\"},\"returns\":{\"_0\":\"The expiration time.\"}},\"getLicenseTerms(uint256)\":{\"params\":{\"selectedLicenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"terms\":\"The PILTerms associate with the given ID.\"}},\"getLicenseTermsId((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))\":{\"params\":{\"terms\":\"The PILTerms to get the ID for.\"},\"returns\":{\"selectedLicenseTermsId\":\"The ID of the given license terms.\"}},\"getLicenseTermsURI(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"The URI of the license terms.\"}},\"getMetadataURI()\":{\"returns\":{\"_0\":\"The metadata URI of the license template.\"}},\"getRoyaltyPolicy(uint256)\":{\"details\":\"All License Templates should implement this method. The royalty policy is used to calculate royalties and pay minting license fee. Should return address(0) if the license template does not support a royalty policy or the license term does set RoyaltyPolicy.\",\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"currencyToken\":\"The address of the ERC20 token, used for minting license fee and royalties. the currency token will used for pay for license token minting fee and royalties.\",\"mintingLicenseFee\":\"The fee for minting a license.\",\"royaltyPercent\":\"The percentage of the royalty.\",\"royaltyPolicy\":\"The address of the royalty policy specified for the license terms.\"}},\"isLicenseTransferable(uint256)\":{\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"True if the license terms is transferable, false otherwise.\"}},\"name()\":{\"returns\":{\"_0\":\"The name of the license template.\"}},\"registerLicenseTerms((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))\":{\"params\":{\"terms\":\"The PILTerms to register.\"},\"returns\":{\"selectedLicenseTermsId\":\"The ID of the newly registered license terms.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"toJson(uint256)\":{\"details\":\"the json will be part of metadata as attributes return by tokenURI() license token, hence the json format should follow the common NFT metadata standard.\",\"params\":{\"licenseTermsId\":\"The ID of the license terms.\"},\"returns\":{\"_0\":\"The JSON string of the license terms.\"}},\"totalRegisteredLicenseTerms()\":{\"returns\":{\"_0\":\"The total number of registered license terms.\"}},\"verifyCompatibleLicenses(uint256[])\":{\"details\":\"This function is called by the LicensingModule to verify license compatibility when registering a derivative IP to multiple parent IPs. It ensures that the licenses of all parent IPs are compatible with each other during the registration process.\",\"params\":{\"licenseTermsIds\":\"The IDs of the license terms.\"},\"returns\":{\"_0\":\"True if the licenses are compatible, false otherwise.\"}},\"verifyMintLicenseToken(uint256,address,address,uint256)\":{\"details\":\"the function will be called by the LicensingModule when minting a license token to verify the minting is whether allowed by the license terms.\",\"params\":{\"amount\":\"The amount of licenses to mint.\",\"licenseTermsId\":\"The ID of the license terms.\",\"licensee\":\"The address of the licensee who will receive the license token.\",\"licensorIpId\":\"The IP ID of the licensor who attached the license terms minting the license token.\"},\"returns\":{\"_0\":\"True if the minting is verified, false otherwise.\"}},\"verifyRegisterDerivative(address,address,uint256,address)\":{\"params\":{\"childIpId\":\"The IP ID of the derivative.\",\"licenseTermsId\":\"The ID of the license terms.\",\"licensee\":\"The address of the licensee.\",\"parentIpId\":\"The IP ID of the parent.\"},\"returns\":{\"_0\":\"True if the registration is verified, false otherwise.\"}},\"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)\":{\"details\":\"This function is called by the LicensingModule to verify licenses for registering a derivative IP to multiple parent IPs. the function will verify the derivative for each parent IP's license and also verify all licenses are compatible.\",\"params\":{\"caller\":\"The address initiating the derivative registration.\",\"childIpId\":\"The IP ID of the derivative.\",\"licenseTermsIds\":\"The IDs of the license terms.\",\"parentIpId\":\"The IP IDs of the parents.\"},\"returns\":{\"_0\":\"True if the registration is verified, false otherwise.\"}}},\"title\":\"IPILicenseTemplate\",\"version\":1},\"userdoc\":{\"events\":{\"LicenseTermsRegistered(uint256,address,bytes)\":{\"notice\":\"Emitted when a new license terms is registered.\"}},\"kind\":\"user\",\"methods\":{\"allowDerivativeRegistration(uint256)\":{\"notice\":\"queries if the derivative registration is allowed under the license terms.\"},\"canAttachToGroupIp(uint256)\":{\"notice\":\"check if the license terms support associate with group IP assets\"},\"canOverrideRoyaltyPercent(uint256,uint32)\":{\"notice\":\"Verifies if the royalty percentage defined in the licenseTermsId can be overridden with the given newRoyaltyPercent.\"},\"exists(uint256)\":{\"notice\":\"Checks if a license terms exists.\"},\"getEarlierExpireTime(uint256[],uint256)\":{\"notice\":\"Returns the earliest expiration time among the given license terms.\"},\"getExpireTime(uint256,uint256)\":{\"notice\":\"Returns the expiration time of a license terms.\"},\"getLicenseTerms(uint256)\":{\"notice\":\"Gets license terms of the given ID.\"},\"getLicenseTermsId((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))\":{\"notice\":\"Gets the ID of the given license terms.\"},\"getLicenseTermsURI(uint256)\":{\"notice\":\"Returns the URI of the license terms.\"},\"getMetadataURI()\":{\"notice\":\"Returns the metadata URI of the license template.\"},\"getRoyaltyPolicy(uint256)\":{\"notice\":\"Returns the royalty policy of a license terms.\"},\"isLicenseTransferable(uint256)\":{\"notice\":\"Checks if a license terms is transferable.\"},\"name()\":{\"notice\":\"Returns the name of the license template.\"},\"registerLicenseTerms((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))\":{\"notice\":\"Registers new license terms.\"},\"toJson(uint256)\":{\"notice\":\"Converts the license terms to a JSON string which will be part of the metadata of license token.\"},\"totalRegisteredLicenseTerms()\":{\"notice\":\"Returns the total number of registered license terms.\"},\"verifyCompatibleLicenses(uint256[])\":{\"notice\":\"Verifies if the licenses are compatible.\"},\"verifyMintLicenseToken(uint256,address,address,uint256)\":{\"notice\":\"Verifies the minting of a license token.\"},\"verifyRegisterDerivative(address,address,uint256,address)\":{\"notice\":\"It verifies whether the derivative's registration is permitted under those terms.\"},\"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)\":{\"notice\":\"Verifies the registration of a derivative for all parent IPs.\"}},\"notice\":\"This interface defines the methods for a Programmable IP License (PIL) template. The PIL template is used to generate PIL terms that can be attached to IP Assets. The legal document of the PIL can be found in this repository.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol\":\"IPILicenseTemplate\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/\",\":@openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":@vizing/=node_modules/@vizing/\",\":create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc6551/=node_modules/erc6551/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/src/\",\":protocol-core-v1/=lib/protocol-core-v1/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol\":{\"keccak256\":\"0x40d87d67efc28863a02d649122e1bd841136a44462108f677d691fb973f760ed\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77b68e858c24b90cfd93e56a8ad8c30c9c3337885c9cc071c81512d813679b04\",\"dweb:/ipfs/QmVTMdLua1Qh7AVN5dZXZaacayuosAYfrpqDihMKbuZWHX\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol\":{\"keccak256\":\"0x17249bb6a3ce59ec978552c55cf5a5b387012cec5f51d78916a52c4e96d7765a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://98a866063bac0bdca34ab4e4ebe1014b5b88d9c6140908da2442539820ea53a0\",\"dweb:/ipfs/QmdfycqUzwQpzqUwqS6MC9XbxZxg3wjX4ZTrRUgjKgSPU1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256","indexed":true},{"internalType":"address","name":"licenseTemplate","type":"address","indexed":true},{"internalType":"bytes","name":"licenseTerms","type":"bytes","indexed":false}],"type":"event","name":"LicenseTermsRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"allowDerivativeRegistration","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"canAttachToGroupIp","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"uint32","name":"newRoyaltyPercent","type":"uint32"}],"stateMutability":"view","type":"function","name":"canOverrideRoyaltyPercent","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"},{"internalType":"uint256","name":"start","type":"uint256"}],"stateMutability":"view","type":"function","name":"getEarlierExpireTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"}],"stateMutability":"view","type":"function","name":"getExpireTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"selectedLicenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getLicenseTerms","outputs":[{"internalType":"struct PILTerms","name":"terms","type":"tuple","components":[{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"address","name":"royaltyPolicy","type":"address"},{"internalType":"uint256","name":"defaultMintingFee","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"commercialUse","type":"bool"},{"internalType":"bool","name":"commercialAttribution","type":"bool"},{"internalType":"address","name":"commercializerChecker","type":"address"},{"internalType":"bytes","name":"commercializerCheckerData","type":"bytes"},{"internalType":"uint32","name":"commercialRevShare","type":"uint32"},{"internalType":"uint256","name":"commercialRevCeiling","type":"uint256"},{"internalType":"bool","name":"derivativesAllowed","type":"bool"},{"internalType":"bool","name":"derivativesAttribution","type":"bool"},{"internalType":"bool","name":"derivativesApproval","type":"bool"},{"internalType":"bool","name":"derivativesReciprocal","type":"bool"},{"internalType":"uint256","name":"derivativeRevCeiling","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"string","name":"uri","type":"string"}]}]},{"inputs":[{"internalType":"struct PILTerms","name":"terms","type":"tuple","components":[{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"address","name":"royaltyPolicy","type":"address"},{"internalType":"uint256","name":"defaultMintingFee","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"commercialUse","type":"bool"},{"internalType":"bool","name":"commercialAttribution","type":"bool"},{"internalType":"address","name":"commercializerChecker","type":"address"},{"internalType":"bytes","name":"commercializerCheckerData","type":"bytes"},{"internalType":"uint32","name":"commercialRevShare","type":"uint32"},{"internalType":"uint256","name":"commercialRevCeiling","type":"uint256"},{"internalType":"bool","name":"derivativesAllowed","type":"bool"},{"internalType":"bool","name":"derivativesAttribution","type":"bool"},{"internalType":"bool","name":"derivativesApproval","type":"bool"},{"internalType":"bool","name":"derivativesReciprocal","type":"bool"},{"internalType":"uint256","name":"derivativeRevCeiling","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"string","name":"uri","type":"string"}]}],"stateMutability":"view","type":"function","name":"getLicenseTermsId","outputs":[{"internalType":"uint256","name":"selectedLicenseTermsId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getLicenseTermsURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMetadataURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRoyaltyPolicy","outputs":[{"internalType":"address","name":"royaltyPolicy","type":"address"},{"internalType":"uint32","name":"royaltyPercent","type":"uint32"},{"internalType":"uint256","name":"mintingLicenseFee","type":"uint256"},{"internalType":"address","name":"currencyToken","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isLicenseTransferable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"struct PILTerms","name":"terms","type":"tuple","components":[{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"address","name":"royaltyPolicy","type":"address"},{"internalType":"uint256","name":"defaultMintingFee","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"commercialUse","type":"bool"},{"internalType":"bool","name":"commercialAttribution","type":"bool"},{"internalType":"address","name":"commercializerChecker","type":"address"},{"internalType":"bytes","name":"commercializerCheckerData","type":"bytes"},{"internalType":"uint32","name":"commercialRevShare","type":"uint32"},{"internalType":"uint256","name":"commercialRevCeiling","type":"uint256"},{"internalType":"bool","name":"derivativesAllowed","type":"bool"},{"internalType":"bool","name":"derivativesAttribution","type":"bool"},{"internalType":"bool","name":"derivativesApproval","type":"bool"},{"internalType":"bool","name":"derivativesReciprocal","type":"bool"},{"internalType":"uint256","name":"derivativeRevCeiling","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"string","name":"uri","type":"string"}]}],"stateMutability":"nonpayable","type":"function","name":"registerLicenseTerms","outputs":[{"internalType":"uint256","name":"selectedLicenseTermsId","type":"uint256"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"}],"stateMutability":"view","type":"function","name":"toJson","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalRegisteredLicenseTerms","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"verifyCompatibleLicenses","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"address","name":"licensee","type":"address"},{"internalType":"address","name":"licensorIpId","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"verifyMintLicenseToken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"childIpId","type":"address"},{"internalType":"address","name":"parentIpId","type":"address"},{"internalType":"uint256","name":"licenseTermsId","type":"uint256"},{"internalType":"address","name":"licensee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"verifyRegisterDerivative","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"childIpId","type":"address"},{"internalType":"address[]","name":"parentIpId","type":"address[]"},{"internalType":"uint256[]","name":"licenseTermsIds","type":"uint256[]"},{"internalType":"address","name":"caller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"verifyRegisterDerivativeForAllParents","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"allowDerivativeRegistration(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the derivative registration is allowed, false otherwise."}},"canAttachToGroupIp(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the license terms support associate with group IP assets, false otherwise."}},"canOverrideRoyaltyPercent(uint256,uint32)":{"params":{"licenseTermsId":"The ID of the license terms.","newRoyaltyPercent":"The new royalty percentage."},"returns":{"_0":"True if the royalty percentage can be overridden, false otherwise."}},"exists(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the license terms exists, false otherwise."}},"getEarlierExpireTime(uint256[],uint256)":{"params":{"licenseTermsIds":"The IDs of the license terms.","start":"The start time to calculate the expiration time."},"returns":{"_0":"The earliest expiration time."}},"getExpireTime(uint256,uint256)":{"params":{"licenseTermsId":"The ID of the license terms.","start":"The start time."},"returns":{"_0":"The expiration time."}},"getLicenseTerms(uint256)":{"params":{"selectedLicenseTermsId":"The ID of the license terms."},"returns":{"terms":"The PILTerms associate with the given ID."}},"getLicenseTermsId((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":{"params":{"terms":"The PILTerms to get the ID for."},"returns":{"selectedLicenseTermsId":"The ID of the given license terms."}},"getLicenseTermsURI(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"The URI of the license terms."}},"getMetadataURI()":{"returns":{"_0":"The metadata URI of the license template."}},"getRoyaltyPolicy(uint256)":{"details":"All License Templates should implement this method. The royalty policy is used to calculate royalties and pay minting license fee. Should return address(0) if the license template does not support a royalty policy or the license term does set RoyaltyPolicy.","params":{"licenseTermsId":"The ID of the license terms."},"returns":{"currencyToken":"The address of the ERC20 token, used for minting license fee and royalties. the currency token will used for pay for license token minting fee and royalties.","mintingLicenseFee":"The fee for minting a license.","royaltyPercent":"The percentage of the royalty.","royaltyPolicy":"The address of the royalty policy specified for the license terms."}},"isLicenseTransferable(uint256)":{"params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"True if the license terms is transferable, false otherwise."}},"name()":{"returns":{"_0":"The name of the license template."}},"registerLicenseTerms((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":{"params":{"terms":"The PILTerms to register."},"returns":{"selectedLicenseTermsId":"The ID of the newly registered license terms."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"toJson(uint256)":{"details":"the json will be part of metadata as attributes return by tokenURI() license token, hence the json format should follow the common NFT metadata standard.","params":{"licenseTermsId":"The ID of the license terms."},"returns":{"_0":"The JSON string of the license terms."}},"totalRegisteredLicenseTerms()":{"returns":{"_0":"The total number of registered license terms."}},"verifyCompatibleLicenses(uint256[])":{"details":"This function is called by the LicensingModule to verify license compatibility when registering a derivative IP to multiple parent IPs. It ensures that the licenses of all parent IPs are compatible with each other during the registration process.","params":{"licenseTermsIds":"The IDs of the license terms."},"returns":{"_0":"True if the licenses are compatible, false otherwise."}},"verifyMintLicenseToken(uint256,address,address,uint256)":{"details":"the function will be called by the LicensingModule when minting a license token to verify the minting is whether allowed by the license terms.","params":{"amount":"The amount of licenses to mint.","licenseTermsId":"The ID of the license terms.","licensee":"The address of the licensee who will receive the license token.","licensorIpId":"The IP ID of the licensor who attached the license terms minting the license token."},"returns":{"_0":"True if the minting is verified, false otherwise."}},"verifyRegisterDerivative(address,address,uint256,address)":{"params":{"childIpId":"The IP ID of the derivative.","licenseTermsId":"The ID of the license terms.","licensee":"The address of the licensee.","parentIpId":"The IP ID of the parent."},"returns":{"_0":"True if the registration is verified, false otherwise."}},"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":{"details":"This function is called by the LicensingModule to verify licenses for registering a derivative IP to multiple parent IPs. the function will verify the derivative for each parent IP's license and also verify all licenses are compatible.","params":{"caller":"The address initiating the derivative registration.","childIpId":"The IP ID of the derivative.","licenseTermsIds":"The IDs of the license terms.","parentIpId":"The IP IDs of the parents."},"returns":{"_0":"True if the registration is verified, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"allowDerivativeRegistration(uint256)":{"notice":"queries if the derivative registration is allowed under the license terms."},"canAttachToGroupIp(uint256)":{"notice":"check if the license terms support associate with group IP assets"},"canOverrideRoyaltyPercent(uint256,uint32)":{"notice":"Verifies if the royalty percentage defined in the licenseTermsId can be overridden with the given newRoyaltyPercent."},"exists(uint256)":{"notice":"Checks if a license terms exists."},"getEarlierExpireTime(uint256[],uint256)":{"notice":"Returns the earliest expiration time among the given license terms."},"getExpireTime(uint256,uint256)":{"notice":"Returns the expiration time of a license terms."},"getLicenseTerms(uint256)":{"notice":"Gets license terms of the given ID."},"getLicenseTermsId((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":{"notice":"Gets the ID of the given license terms."},"getLicenseTermsURI(uint256)":{"notice":"Returns the URI of the license terms."},"getMetadataURI()":{"notice":"Returns the metadata URI of the license template."},"getRoyaltyPolicy(uint256)":{"notice":"Returns the royalty policy of a license terms."},"isLicenseTransferable(uint256)":{"notice":"Checks if a license terms is transferable."},"name()":{"notice":"Returns the name of the license template."},"registerLicenseTerms((bool,address,uint256,uint256,bool,bool,address,bytes,uint32,uint256,bool,bool,bool,bool,uint256,address,string))":{"notice":"Registers new license terms."},"toJson(uint256)":{"notice":"Converts the license terms to a JSON string which will be part of the metadata of license token."},"totalRegisteredLicenseTerms()":{"notice":"Returns the total number of registered license terms."},"verifyCompatibleLicenses(uint256[])":{"notice":"Verifies if the licenses are compatible."},"verifyMintLicenseToken(uint256,address,address,uint256)":{"notice":"Verifies the minting of a license token."},"verifyRegisterDerivative(address,address,uint256,address)":{"notice":"It verifies whether the derivative's registration is permitted under those terms."},"verifyRegisterDerivativeForAllParents(address,address[],uint256[],address)":{"notice":"Verifies the registration of a derivative for all parent IPs."}},"version":1}},"settings":{"remappings":["@create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/","@openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/","@openzeppelin/=node_modules/@openzeppelin/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","@vizing/=node_modules/@vizing/","create3-deployer/=lib/protocol-core-v1/lib/create3-deployer/","ds-test/=node_modules/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc6551/=node_modules/erc6551/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=node_modules/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/src/","protocol-core-v1/=lib/protocol-core-v1/","solady/=node_modules/solady/","solidity-stringutils/=lib/protocol-core-v1/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol":"IPILicenseTemplate"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol":{"keccak256":"0x40d87d67efc28863a02d649122e1bd841136a44462108f677d691fb973f760ed","urls":["bzz-raw://77b68e858c24b90cfd93e56a8ad8c30c9c3337885c9cc071c81512d813679b04","dweb:/ipfs/QmVTMdLua1Qh7AVN5dZXZaacayuosAYfrpqDihMKbuZWHX"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol":{"keccak256":"0x17249bb6a3ce59ec978552c55cf5a5b387012cec5f51d78916a52c4e96d7765a","urls":["bzz-raw://98a866063bac0bdca34ab4e4ebe1014b5b88d9c6140908da2442539820ea53a0","dweb:/ipfs/QmdfycqUzwQpzqUwqS6MC9XbxZxg3wjX4ZTrRUgjKgSPU1"],"license":"BUSL-1.1"}},"version":1},"id":51}